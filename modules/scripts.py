import json
from datetime import datetime
import pytz
import sqlite3
import os

PARENT_DIR = os.path.dirname(os.path.abspath(__file__))  # —Ç–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–∫—Ä–∏–ø—Ç–∞
SCRIPT_DIR = os.path.dirname(PARENT_DIR)  # –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É—Ä–æ–≤–Ω–µ–º –≤—ã—à–µ
DB_NAME = 'database.db'
DB_PATH = f"{SCRIPT_DIR}/{DB_NAME}"

def now_time():  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ –ú–°–ö
    now = datetime.now()
    tz = pytz.timezone('Europe/Moscow')
    now_moscow = now.astimezone(tz)
    current_time = now_moscow.strftime("%H:%M:%S")
    current_date = now_moscow.strftime("%Y.%m.%d")
    return current_date, current_time

def SQL_request(request, params=()):  # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
    connect = sqlite3.connect(DB_PATH)
    cursor = connect.cursor()
    if request.strip().lower().startswith('select'):
        cursor.execute(request, params)
        result = cursor.fetchone()
        connect.close()
        return result
    else:
        cursor.execute(request, params)
        connect.commit()
        connect.close()

def add_mood(user_id, mood, reason):
    current_date, current_time = now_time()
    result = SQL_request("SELECT mood FROM users WHERE id = ?", (user_id,))
    if result and result[0]:
        mood_data = json.loads(result[0])
    else:
        mood_data = {}
    if current_date not in mood_data:
        mood_data[current_date] = {}
    if len(mood_data[current_date]) < 20:
        mood_data[current_date][current_time] = {'mood': mood, 'reason': reason}
    else:
        print("–î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å")
        return
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    SQL_request("UPDATE users SET mood = ? WHERE id = ?", (json.dumps(mood_data, ensure_ascii=False), user_id))

def get_only_mood(user_id, date):  # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    result = SQL_request("SELECT mood FROM users WHERE id = ?", (user_id,))
    if result and result[0]:
        mood_data = json.loads(result[0])
        if date in mood_data:
            moods = [entry['mood'] for time, entry in mood_data[date].items()]
            mood_message = "    ".join(moods)
            mood_message = mood_message.replace("–†–∞–¥–æ—Å—Ç—å", "üòä")
            mood_message = mood_message.replace("–ü–µ—á–∞–ª—å", "üò¢")
            mood_message = mood_message.replace("–†–∞–≤–Ω–æ–¥—É—à–∏–µ", "üòê")
            mood_message = mood_message.replace("–í–æ—Å—Ç–æ—Ä–≥", "üòÅ")
            mood_message = mood_message.replace("–£—Å—Ç–∞–ª–æ—Å—Ç—å", "üò¥")
            mood_message = format_emojis(mood_message)
            return mood_message
        else:
            return f"–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π"
    else:
        return "–î–∞–Ω–Ω—ã–µ –æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"

def format_emojis(text):  # –†–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å–º–∞–π–ª–∏–∫–∏
    emojis = text.split()
    emojis = emojis[:20]
    rows = []
    for i in range(5):
        row = '    '.join(emojis[i*4:(i+1)*4])
        rows.append(row)
    result = '\n'.join(rows)
    return result

# –ü–†–û–í–ï–†–ö–ê –°–û–ó–î–ê–ù–ò–Ø –ë–î
if not os.path.exists(DB_PATH):
    connect = sqlite3.connect(DB_PATH)
    cursor = connect.cursor()
    cursor.execute("""
        CREATE TABLE users (
            id INTEGER,
            message INTEGER, 
            frend INTEGER,
            time_registration TIME,
            username TEXT,
            topics TEXT,
            mood JSON
        )
    """)
    connect.commit()
    connect.close()
    print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞")
